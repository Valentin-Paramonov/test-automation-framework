import de.undercouch.gradle.tasks.download.Download
import groovy.transform.CompileStatic
import org.codehaus.groovy.control.CompilerConfiguration

import static org.codehaus.groovy.control.customizers.builder.CompilerCustomizationBuilder.withConfig

plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
    id 'de.undercouch.download' version '3.0.0'
    id 'com.github.jacobono.jaxb' version '1.3.5'
    id "net.ltgt.apt" version "0.6"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.6'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'io.reactivex:rxgroovy:1.0.3'
    compile 'com.squareup.dagger:dagger:1.2.5'
    apt 'com.squareup.dagger:dagger-compiler:1.2.5'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.2'
    testCompile 'org.objenesis:objenesis:2.3'
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
    jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
    jaxb 'javax.xml.bind:jaxb-api:2.2.7'
}

ext {
    resourceDir = 'src/main/resources'
}

def config = new CompilerConfiguration()
withConfig(config) {
    ast(CompileStatic)
}

compileGroovy {
    groovyOptions.javaAnnotationProcessing = true
}

task downloadFreemindSchema(type: Download) {
    doFirst {
        new File(resourceDir as String).mkdir()
    }
    src 'http://freemind.cvs.sourceforge.net/viewvc/freemind/freemind/freemind.xsd'
    dest resourceDir
}

jaxb {
    final buildDirName = project.buildDir.name
    xsdDir = resourceDir
    episodesDir = buildDirName
    xjc {
        generatePackage = 'freemind'
    }
}

xjc.dependsOn downloadFreemindSchema
compileJava.dependsOn xjc

shadowJar {
    baseName = 'taf'
    classifier = ''
    manifest {
        attributes 'Main-Class': 'paramonov.valentine.taf.cli.App'
    }
    exclude '*.html'
    exclude '*.xsd'
}

build.dependsOn shadowJar
